!function(){"use strict";class e{constructor(e,t,s){let{name:r,link:o}=e;this._name=r,this._link=o,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove()}_handleViewCardImage(){this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name}getView(){return this._cardElement=this._getTemplate(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._handleViewCardImage(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this.inputSelector=e.inputSelector,this.submitButtonSelector=e.submitButtonSelector,this.inactiveButtonClass=e.inactiveButtonClass,this.inputErrorClass=e.inputErrorClass,this.errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this.errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this.inputErrorClass),t.textContent="",t.classList.remove(this.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this.inputEls.every((e=>e.validity.valid))}toggleButtonState(){this._hasInvalidInput()?(this.submitButton.classList.add(this.inactiveButtonClass),this.submitButton.disabled=!0):(this.submitButton.classList.remove(this.inactiveButtonClass),this.submitButton.disabled=!1)}_setEventListeners(){this.inputEls=[...this._form.querySelectorAll(this.inputSelector)],this.submitButton=this._form.querySelector(this.submitButtonSelector),this.inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e,this.submitButton),this.toggleButtonState(e,this.submitButton)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._form)}}class s{constructor(e){this._popupElement=document.querySelector(e),this._popupElementCloseButton=this._popupElement.querySelector(".popup__close-button")}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElementCloseButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("popup_opened")&&this.close(e.target)}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".popup__form"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._popupForm.querySelectorAll(".popup__input").forEach((t=>{e[t.name]=t.value})),e}close(){this._popupForm.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}_handleSubmit=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}}document.querySelector(".cards__list");const o=document.querySelector("#profile-edit-popup"),n=document.querySelector("#add-card-popup"),i=(o.querySelector("#edit-profile-form"),n.querySelector("#add-card-form")),a=document.querySelector("#view-image-popup"),c=document.querySelector("#profile-edit-button"),u=(o.querySelector("#editprofile-close-button"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".cards__list"),document.querySelector("#add-button")),l=(n.querySelector("#addcard-close-button"),document.querySelector(".popup__title"),document.querySelector(".popup__image-link"),a.querySelector(".popup__image-view"),document.querySelector(".popup__image-caption"),a.querySelector("#viewimage-close-button"),document.querySelector(".popup__input_type_name")),p=document.querySelector(".popup__input_type_description"),d=(i.querySelector(".popup__input_type_title"),i.querySelector(".popup__input_type_url"),i.querySelector(".popup__save-button"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),_=document.querySelector("#edit-profile-form"),m=document.querySelector("#add-card-form");function h(t){return new e(t,"#card-template",((e,t)=>{y.open({name:e,link:t})})).getView()}document.querySelector("#card-template").content.querySelector(".card");const S=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(".cards__list")}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoice National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=h(e);S.addItem(t)}});S.renderItems();const E=new t(d,_),v=new t(d,m);E.enableValidation(),v.enableValidation();const y=new class extends s{constructor(e){super(e),this._viewImage=document.querySelector(".popup__image-view"),this._viewImageCaption=document.querySelector(".popup__image-caption")}open(e){let{name:t,link:s}=e;this._viewImage.alt=t,this._viewImageCaption.textContent=t,this._viewImage.src=s,super.open()}}("#view-image-popup");y.setEventListeners();const g=new r("#profile-edit-popup",(e=>{w.setUserInfo(e.name,e.about),g.close()}));g.setEventListeners(),c.addEventListener("click",(()=>{const e=w.getUserInfo();l.value=e.name,p.value=e.about,g.open()}));const q=new r("#add-card-popup",(e=>{const t=h(e);S.addItem(t),q.close()}));q.setEventListeners(),u.addEventListener("click",(()=>{v.toggleButtonState(),q.open()}));const w=new class{constructor(e){this.userName=document.querySelector(e.userName),this.userDescription=document.querySelector(e.userDescription)}getUserInfo(){return{name:this.userName.textContent,description:this.userDescription.textContent}}setUserInfo(e,t){this.userName.textContent=e,this.userDescription.textContent=t}}({userName:".profile__title",userDescription:".profile__description"})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,